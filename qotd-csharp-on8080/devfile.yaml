metadata:
  name: dotnet-web
projects:
  - name: qotd-csharp
    source:
      location: 'https://github.com/donschenck/qotd-csharp'
      type: git
      branch: master
attributes:
  persistVolumes: 'false'
components:
  - id: redhat-developer/che-omnisharp-plugin/latest
    memoryLimit: 1024Mi
    type: chePlugin
    alias: omnisharp
  - id: redhat-developer/netcoredbg-theia-plugin/latest
    memoryLimit: 512Mi
    type: chePlugin
    alias: netcoredbg
  - mountSources: true
    endpoints:
      - name: 5000/tcp
        port: 5000
    memoryLimit: 512Mi
    type: dockerimage
    volumes:
      - name: dotnet
        containerPath: /home/user
    alias: dotnet
    image: 'registry.access.redhat.com/ubi8/dotnet-30'
    args:
      - tail
      - '-f'
      - /dev/null
    env:
      - name: DOTNET_CLI_HOME
        value: /tmp
    volumes:
      - name: dependencies
        containerPath: /.dotnet

apiVersion: 1.0.0
commands:
  - name: build
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/qotd-csharp'
        type: exec
        command: dotnet build
        component: dotnet
  - name: Launch .NET Web Application on Debug mode
    actions:
      - referenceContent: |
          {
            "version": "0.2.0",
              "configurations": [
                {
                    "type": "netcoredbg",
                    "request": "launch",
                    "program": "/projects/qotd-csharp/bin/Debug/netcoreapp3.0/qotd-csharp.dll",
                    "args": [],
                    "name": ".NET Core Launch (console)",
                    "stopAtEntry": false,
                    "console": "internalConsole"
                }
            ]
          }
        type: vscode-launch
  - name: run
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/qotd-csharp'
        type: exec
        command: dotnet run
        component: dotnet
  - name: update dependencies
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/qotd-csharp'
        type: exec
        command: dotnet restore
        component: dotnet
